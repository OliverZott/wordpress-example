services:
  db:
    image: mysql:latest
    ports: 
      - "3309:3306"
    volumes:
      - db_data:/var/lib/mysql
      # - local_db_data:/var/lib/mysql # Mounts the local directory `./db_data` to the container's `/var/lib/mysql` directory
      # - ./backup.sql:/docker-entrypoint-initdb.d/backup.sql # Seed database from a backup-sql file
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Grant privilages to the wordpress user
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress


  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    ports:
      - "8000:80"
    restart: always
    environment:
      # use service name without port number, Docker Compose uses internal DNS to resolve service name to the appropriate container IP address within the same network.
      WORDPRESS_DB_HOST: db 
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    # Mounts the local directory `./wp-content` and ./wp-config.phpto the container's respective directory
    # This allows you to persist and manage WordPress content files locally.
    volumes:
      - ./wp-content:/var/www/html/wp-content
      - ./wp-config.php:/var/www/html/wp-config.php

volumes:
  db_data: